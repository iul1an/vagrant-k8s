---
- hosts: all
  become: true
  tasks:
  - name: Switch nftables to iptables
    shell:
      cmd: "{{ item }}"
    loop:
      - update-alternatives --set iptables /usr/sbin/iptables-legacy
      - update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy

  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/debian/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb https://download.docker.com/linux/debian buster stable
      state: present

  - name: Install docker and its dependencies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

  - name: Configure node ip for kubelet
    copy:
      dest: /etc/default/kubelet
      content: |
        KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Initialize the Kubernetes cluster using kubeadm
    command: |
      kubeadm init \
        --apiserver-advertise-address={{ node_ip }} \
        --apiserver-cert-extra-sans={{ node_ip }}  \
        --node-name {{ inventory_hostname }} \
        --pod-network-cidr=10.244.0.0/16

  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/vagrant/.kube
     - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
     - chown vagrant:vagrant /home/vagrant/.kube/config

  - name: Fetch kubectl config
    become: false
    fetch:
      src: /home/vagrant/.kube/config
      dest: ../tmp/kubectl/
      flat: yes

  - name: Install bash completion
    apt:
      name: "bash-completion"
      state: present
      update_cache: yes

  - name: Enable kubelet bash completion
    copy:
      dest: /etc/profile.d/kubectl-completion.sh
      content: |
        which kubectl &>/dev/null && source <(kubectl completion bash)

  - name: Copy the Calico CNI manifest
    copy: src=files/cni/calico.yaml dest=/tmp/calico.yaml

  - name: Install CNI
    become: false
    command: kubectl create -f /tmp/calico.yaml

  - name: Remove master taint for single node cluster
    become: false
    command: "{{ item }}"
    with_items:
      - kubectl taint nodes --all node-role.kubernetes.io/master-
      - kubectl label nodes --all node-role.kubernetes.io/worker=""
    when: single_node_cluster

  - name: Install MetalLB
    become: false
    command: "{{ item }}"
    with_items:
     - kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/namespace.yaml
     - kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/metallb.yaml
     - kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"

  - name: create MetalLB config
    become: false
    copy:
      dest: /tmp/metallb-config.yaml
      content: |
        apiVersion: v1
        kind: ConfigMap
        metadata:
          namespace: metallb-system
          name: config
        data:
          config: |
            address-pools:
            - name: default
              protocol: layer2
              addresses:
              - {{ metallb_addresses }}

  - name: install MetalLB config
    become: false
    command: kubectl create -f /tmp/metallb-config.yaml

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command
    when: not single_node_cluster

  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="../tmp/join-command"
    become: false
    when: not single_node_cluster

  handlers:
    - name: docker status
      service: name=docker state=started


